"""add obstacles table and update command_history

Revision ID: ce88e337e621
Revises: d2d102a41f6b
Create Date: 2025-10-27 05:08:48.889171

"""

from typing import Sequence, Union

import sqlalchemy as sa

from alembic import op

# revision identifiers, used by Alembic.
revision: str = "ce88e337e621"
down_revision: Union[str, Sequence[str], None] = "d2d102a41f6b"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "obstacles",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("x", sa.Integer(), nullable=False),
        sa.Column("y", sa.Integer(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("x", "y", name="uq_obstacle_coordinates"),
    )
    op.add_column("command_history", sa.Column("obstacle_x", sa.Integer(), nullable=True))
    op.add_column("command_history", sa.Column("obstacle_y", sa.Integer(), nullable=True))
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column("command_history", "obstacle_y")
    op.drop_column("command_history", "obstacle_x")
    op.drop_table("obstacles")
    # ### end Alembic commands ###
